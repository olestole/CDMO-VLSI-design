Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /usr/local/lib/python3.9/site-packages/pulp/apis/../solverdir/cbc/osx/64/cbc /var/folders/t4/vnxj6kkj2n97knry5lnrscx00000gn/T/b7cfd92da02f4d238c002747bc561a75-pulp.mps sec 300 timeMode elapsed branch printingOptions all solution /var/folders/t4/vnxj6kkj2n97knry5lnrscx00000gn/T/b7cfd92da02f4d238c002747bc561a75-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 45 COLUMNS
At line 263 RHS
At line 304 BOUNDS
At line 343 ENDATA
Problem MODEL has 40 rows, 37 columns and 126 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 300
Option for timeMode changed from cpu to elapsed
Continuous objective value is 6 - 0.00 seconds
Cgl0002I 2 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 35 columns (35 integer (26 of which binary)) and 125 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 24 integers unsatisfied sum - 7.5
Cbc0038I Pass   1: suminf.    3.75000 (11) obj. 8 iterations 15
Cbc0038I Pass   2: suminf.    3.25000 (10) obj. 8 iterations 1
Cbc0038I Pass   3: suminf.    0.75000 (2) obj. 8 iterations 11
Cbc0038I Pass   4: suminf.    0.75000 (2) obj. 8 iterations 0
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 11 iterations 3
Cbc0038I Solution found of 11
Cbc0038I Cleaned solution of 11
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 35 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 11 to 8 (0.01 seconds)
Cbc0038I Round again with cutoff of 6.90009
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   6: suminf.    3.75000 (13) obj. 6 iterations 2
Cbc0038I Pass   7: suminf.    1.37500 (4) obj. 6 iterations 17
Cbc0038I Pass   8: suminf.    1.18750 (5) obj. 6 iterations 1
Cbc0038I Pass   9: suminf.    1.00000 (4) obj. 6 iterations 5
Cbc0038I Pass  10: suminf.    0.50000 (4) obj. 6 iterations 3
Cbc0038I Pass  11: suminf.    1.50000 (4) obj. 6 iterations 4
Cbc0038I Pass  12: suminf.    1.00000 (4) obj. 6 iterations 4
Cbc0038I Pass  13: suminf.    1.80000 (6) obj. 6 iterations 16
Cbc0038I Pass  14: suminf.    1.42500 (5) obj. 6 iterations 5
Cbc0038I Pass  15: suminf.    1.00000 (4) obj. 6 iterations 8
Cbc0038I Pass  16: suminf.    1.12500 (6) obj. 6 iterations 9
Cbc0038I Pass  17: suminf.    1.75000 (6) obj. 6 iterations 10
Cbc0038I Pass  18: suminf.    1.37500 (6) obj. 6 iterations 1
Cbc0038I Pass  19: suminf.    1.50000 (6) obj. 6 iterations 9
Cbc0038I Pass  20: suminf.    0.75000 (4) obj. 6 iterations 2
Cbc0038I Pass  21: suminf.    0.75000 (4) obj. 6 iterations 0
Cbc0038I Pass  22: suminf.    2.43750 (10) obj. 6 iterations 11
Cbc0038I Pass  23: suminf.    1.68750 (9) obj. 6 iterations 4
Cbc0038I Pass  24: suminf.    1.00000 (4) obj. 6 iterations 15
Cbc0038I Pass  25: suminf.    1.00000 (4) obj. 6 iterations 6
Cbc0038I Pass  26: suminf.    0.50000 (4) obj. 6 iterations 2
Cbc0038I Pass  27: suminf.    1.00000 (4) obj. 6 iterations 5
Cbc0038I Pass  28: suminf.    0.50000 (4) obj. 6 iterations 3
Cbc0038I Pass  29: suminf.    0.68750 (5) obj. 6 iterations 3
Cbc0038I Pass  30: suminf.    0.68750 (5) obj. 6 iterations 2
Cbc0038I Pass  31: suminf.    1.00000 (4) obj. 6 iterations 7
Cbc0038I Pass  32: suminf.    0.50000 (4) obj. 6 iterations 2
Cbc0038I Pass  33: suminf.    1.00000 (4) obj. 6 iterations 5
Cbc0038I Pass  34: suminf.    0.50000 (4) obj. 6 iterations 2
Cbc0038I Pass  35: suminf.    0.68750 (5) obj. 6 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 8 - took 0.01 seconds
Cbc0012I Integer solution of 8 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 6 to 6 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 8, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 6 to 6
Probing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                8.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

