Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /usr/local/lib/python3.9/site-packages/pulp/apis/../solverdir/cbc/osx/64/cbc /var/folders/t4/vnxj6kkj2n97knry5lnrscx00000gn/T/e37f791a7055412898e046fba8fb454b-pulp.mps sec 300 timeMode elapsed branch printingOptions all solution /var/folders/t4/vnxj6kkj2n97knry5lnrscx00000gn/T/e37f791a7055412898e046fba8fb454b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 161 COLUMNS
At line 893 RHS
At line 1050 BOUNDS
At line 1181 ENDATA
Problem MODEL has 156 rows, 129 columns and 472 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 300
Option for timeMode changed from cpu to elapsed
Continuous objective value is 10 - 0.00 seconds
Cgl0004I processed model has 148 rows, 129 columns (129 integer (112 of which binary)) and 464 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 129 objects (129 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 112 integers unsatisfied sum - 22.75
Cbc0038I Pass   1: suminf.   20.25000 (82) obj. 16 iterations 21
Cbc0038I Pass   2: suminf.   16.00000 (66) obj. 16 iterations 24
Cbc0038I Pass   3: suminf.   15.75000 (65) obj. 16 iterations 2
Cbc0038I Pass   4: suminf.    7.18333 (42) obj. 19 iterations 37
Cbc0038I Pass   5: suminf.    2.95556 (23) obj. 24 iterations 27
Cbc0038I Pass   6: suminf.    0.71111 (6) obj. 39 iterations 21
Cbc0038I Pass   7: suminf.    0.50000 (2) obj. 39 iterations 9
Cbc0038I Pass   8: suminf.    0.50000 (2) obj. 39 iterations 3
Cbc0038I Pass   9: suminf.    0.50000 (2) obj. 39 iterations 7
Cbc0038I Pass  10: suminf.    9.45000 (33) obj. 26.5 iterations 37
Cbc0038I Pass  11: suminf.    5.10000 (24) obj. 22 iterations 5
Cbc0038I Pass  12: suminf.    2.75556 (8) obj. 29 iterations 31
Cbc0038I Pass  13: suminf.    2.65556 (8) obj. 29 iterations 1
Cbc0038I Pass  14: suminf.    1.50000 (5) obj. 34 iterations 15
Cbc0038I Pass  15: suminf.    1.25000 (5) obj. 34 iterations 4
Cbc0038I Pass  16: suminf.    1.50000 (5) obj. 34 iterations 14
Cbc0038I Pass  17: suminf.    1.90000 (7) obj. 34 iterations 7
Cbc0038I Pass  18: suminf.    1.74444 (6) obj. 34 iterations 8
Cbc0038I Pass  19: suminf.    1.00000 (4) obj. 34 iterations 8
Cbc0038I Pass  20: suminf.    7.92222 (28) obj. 25 iterations 65
Cbc0038I Pass  21: suminf.    5.42222 (20) obj. 25 iterations 9
Cbc0038I Pass  22: suminf.    4.42222 (17) obj. 25 iterations 6
Cbc0038I Pass  23: suminf.    4.17222 (16) obj. 25 iterations 5
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. 28 iterations 18
Cbc0038I Solution found of 28
Cbc0038I Cleaned solution of 28
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 129 columns, reduced to 148 rows 129 columns - 22 fixed gives 126, 107 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 25.3001
Cbc0038I Pass  25: suminf.   20.25000 (82) obj. 16 iterations 0
Cbc0038I Pass  26: suminf.   18.00000 (73) obj. 16 iterations 15
Cbc0038I Pass  27: suminf.   17.50000 (71) obj. 16 iterations 6
Cbc0038I Pass  28: suminf.    9.70000 (52) obj. 19 iterations 44
Cbc0038I Pass  29: suminf.    6.54516 (36) obj. 25.3001 iterations 28
Cbc0038I Pass  30: suminf.    3.37183 (18) obj. 25.3001 iterations 24
Cbc0038I Pass  31: suminf.    2.90072 (10) obj. 25.3001 iterations 14
Cbc0038I Pass  32: suminf.    2.65072 (9) obj. 25.3001 iterations 1
Cbc0038I Solution found of 25.3001
Cbc0038I Branch and bound needed to clear up 8 general integers
Cbc0038I Full problem 149 rows 129 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 25
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 129 columns, reduced to 147 rows 127 columns - 54 fixed gives 85, 65 - ok now
Cbc0038I Full problem 148 rows 129 columns, reduced to 73 rows 56 columns
Cbc0038I Mini branch and bound improved solution from 25 to 17 (0.04 seconds)
Cbc0038I Round again with cutoff of 14.8001
Cbc0038I Pass  33: suminf.   20.25000 (87) obj. 14 iterations 2
Cbc0038I Pass  34: suminf.   18.39984 (80) obj. 14.8001 iterations 16
Cbc0038I Pass  35: suminf.   17.89984 (78) obj. 14.8001 iterations 8
Cbc0038I Pass  36: suminf.    8.67983 (54) obj. 14.8001 iterations 47
Cbc0038I Pass  37: suminf.    4.65276 (37) obj. 14.8001 iterations 29
Cbc0038I Pass  38: suminf.    2.56174 (19) obj. 14.8001 iterations 28
Cbc0038I Pass  39: suminf.    2.31174 (18) obj. 14.8001 iterations 3
Cbc0038I Pass  40: suminf.    2.86166 (18) obj. 14.8001 iterations 20
Cbc0038I Pass  41: suminf.    2.86166 (18) obj. 14.8001 iterations 1
Cbc0038I Pass  42: suminf.    2.54832 (18) obj. 14.8001 iterations 20
Cbc0038I Pass  43: suminf.    2.34174 (12) obj. 14.8001 iterations 19
Cbc0038I Pass  44: suminf.    2.11729 (12) obj. 14.8001 iterations 12
Cbc0038I Pass  45: suminf.    6.22388 (32) obj. 14.8001 iterations 37
Cbc0038I Pass  46: suminf.    4.93507 (25) obj. 14.8001 iterations 7
Cbc0038I Pass  47: suminf.    2.76174 (15) obj. 14.8001 iterations 27
Cbc0038I Pass  48: suminf.    2.48396 (15) obj. 14.8001 iterations 2
Cbc0038I Pass  49: suminf.    1.96182 (13) obj. 14.8001 iterations 18
Cbc0038I Pass  50: suminf.    1.46182 (11) obj. 14.8001 iterations 3
Cbc0038I Pass  51: suminf.    2.10841 (12) obj. 14.8001 iterations 11
Cbc0038I Pass  52: suminf.    6.11190 (28) obj. 14.8001 iterations 32
Cbc0038I Pass  53: suminf.    3.86190 (22) obj. 14.8001 iterations 11
Cbc0038I Pass  54: suminf.    3.11190 (19) obj. 14.8001 iterations 6
Cbc0038I Pass  55: suminf.    1.26190 (10) obj. 14.8001 iterations 20
Cbc0038I Pass  56: suminf.    1.26190 (10) obj. 14.8001 iterations 0
Cbc0038I Pass  57: suminf.    1.90849 (11) obj. 14.8001 iterations 12
Cbc0038I Pass  58: suminf.    6.18095 (24) obj. 14.8001 iterations 41
Cbc0038I Pass  59: suminf.    6.34087 (26) obj. 14.8001 iterations 7
Cbc0038I Pass  60: suminf.    3.19753 (18) obj. 14.8001 iterations 35
Cbc0038I Pass  61: suminf.    2.87086 (18) obj. 14.8001 iterations 3
Cbc0038I Pass  62: suminf.    3.51070 (19) obj. 14.8001 iterations 22
Cbc0038I Pass  63: suminf.    3.12181 (19) obj. 14.8001 iterations 1
Cbc0038I Pass  64: suminf.    3.40420 (14) obj. 14.8001 iterations 26
Cbc0038I Pass  65: suminf.    2.76531 (14) obj. 14.8001 iterations 6
Cbc0038I Pass  66: suminf.    1.92301 (13) obj. 14.8001 iterations 19
Cbc0038I Pass  67: suminf.    1.92301 (13) obj. 14.8001 iterations 2
Cbc0038I Pass  68: suminf.    2.69745 (12) obj. 14.8001 iterations 17
Cbc0038I Pass  69: suminf.    2.24634 (12) obj. 14.8001 iterations 4
Cbc0038I Pass  70: suminf.    1.67301 (12) obj. 14.8001 iterations 12
Cbc0038I Pass  71: suminf.    1.67301 (12) obj. 14.8001 iterations 1
Cbc0038I Pass  72: suminf.    6.79840 (35) obj. 14.8001 iterations 43
Cbc0038I Pass  73: suminf.    4.74284 (29) obj. 14.8001 iterations 14
Cbc0038I Pass  74: suminf.    4.58617 (29) obj. 14.8001 iterations 3
Cbc0038I Pass  75: suminf.    2.92403 (21) obj. 14.8001 iterations 14
Cbc0038I Pass  76: suminf.    2.92403 (21) obj. 14.8001 iterations 8
Cbc0038I Pass  77: suminf.    4.38610 (21) obj. 14.8001 iterations 28
Cbc0038I Pass  78: suminf.    4.04166 (23) obj. 14.8001 iterations 4
Cbc0038I Pass  79: suminf.    3.31737 (19) obj. 14.8001 iterations 24
Cbc0038I Pass  80: suminf.    3.44618 (17) obj. 14.8001 iterations 3
Cbc0038I Pass  81: suminf.    1.78420 (15) obj. 14.8001 iterations 16
Cbc0038I Pass  82: suminf.    3.17531 (17) obj. 14.8001 iterations 18
Cbc0038I Pass  83: suminf.    2.28420 (17) obj. 14.8001 iterations 18
Cbc0038I Pass  84: suminf.    6.09063 (29) obj. 14.8001 iterations 32
Cbc0038I Pass  85: suminf.    5.84063 (28) obj. 14.8001 iterations 6
Cbc0038I Pass  86: suminf.    3.74849 (24) obj. 14.8001 iterations 28
Cbc0038I Pass  87: suminf.    3.46412 (21) obj. 14.8001 iterations 6
Cbc0038I Pass  88: suminf.    4.47523 (18) obj. 14.8001 iterations 29
Cbc0038I Pass  89: suminf.    4.29071 (19) obj. 14.8001 iterations 4
Cbc0038I Pass  90: suminf.    3.60833 (23) obj. 14.8001 iterations 17
Cbc0038I Pass  91: suminf.    3.60833 (23) obj. 14.8001 iterations 0
Cbc0038I Pass  92: suminf.    3.15301 (18) obj. 14.8001 iterations 29
Cbc0038I Pass  93: suminf.    3.66388 (22) obj. 14.8001 iterations 24
Cbc0038I Pass  94: suminf.    3.74174 (18) obj. 14.8001 iterations 25
Cbc0038I Pass  95: suminf.    2.94174 (18) obj. 14.8001 iterations 13
Cbc0038I Pass  96: suminf.    3.29499 (20) obj. 14.8001 iterations 17
Cbc0038I Pass  97: suminf.    2.94198 (15) obj. 14.8001 iterations 18
Cbc0038I Pass  98: suminf.    2.79507 (18) obj. 14.8001 iterations 16
Cbc0038I Pass  99: suminf.    7.13746 (32) obj. 14.8001 iterations 47
Cbc0038I Pass 100: suminf.    6.88746 (31) obj. 14.8001 iterations 4
Cbc0038I Pass 101: suminf.    3.36198 (17) obj. 14.8001 iterations 36
Cbc0038I Pass 102: suminf.    2.95086 (16) obj. 14.8001 iterations 9
Cbc0038I Pass 103: suminf.    2.60857 (14) obj. 14.8001 iterations 24
Cbc0038I Pass 104: suminf.    2.60857 (14) obj. 14.8001 iterations 4
Cbc0038I Pass 105: suminf.    3.22523 (13) obj. 14.8001 iterations 12
Cbc0038I Pass 106: suminf.    2.52531 (13) obj. 14.8001 iterations 4
Cbc0038I Pass 107: suminf.    1.51984 (10) obj. 14.8001 iterations 14
Cbc0038I Pass 108: suminf.    2.53071 (15) obj. 14.8001 iterations 17
Cbc0038I Pass 109: suminf.    2.65317 (11) obj. 14.8001 iterations 12
Cbc0038I Pass 110: suminf.    2.21984 (11) obj. 14.8001 iterations 2
Cbc0038I Pass 111: suminf.    1.87293 (13) obj. 14.8001 iterations 11
Cbc0038I Pass 112: suminf.    1.87293 (13) obj. 14.8001 iterations 0
Cbc0038I Pass 113: suminf.    3.00857 (12) obj. 14.8001 iterations 14
Cbc0038I Pass 114: suminf.    2.75737 (13) obj. 14.8001 iterations 3
Cbc0038I Pass 115: suminf.    7.49317 (37) obj. 14.8001 iterations 70
Cbc0038I Pass 116: suminf.    7.99841 (40) obj. 14.8001 iterations 9
Cbc0038I Pass 117: suminf.    5.43968 (33) obj. 14.8001 iterations 17
Cbc0038I Pass 118: suminf.    4.26539 (23) obj. 14.8001 iterations 14
Cbc0038I Pass 119: suminf.    3.40411 (26) obj. 14.8001 iterations 28
Cbc0038I Pass 120: suminf.    4.65301 (23) obj. 14.8001 iterations 26
Cbc0038I Pass 121: suminf.    3.76206 (19) obj. 14.8001 iterations 7
Cbc0038I Pass 122: suminf.    2.80626 (19) obj. 14.8001 iterations 23
Cbc0038I Pass 123: suminf.    2.58618 (18) obj. 14.8001 iterations 7
Cbc0038I Pass 124: suminf.    3.61968 (16) obj. 14.8001 iterations 17
Cbc0038I Pass 125: suminf.    2.87856 (13) obj. 14.8001 iterations 4
Cbc0038I Pass 126: suminf.    2.20531 (12) obj. 14.8001 iterations 5
Cbc0038I Pass 127: suminf.    2.07531 (13) obj. 14.8001 iterations 17
Cbc0038I Pass 128: suminf.    2.07531 (11) obj. 14.8001 iterations 1
Cbc0038I Pass 129: suminf.    2.42864 (11) obj. 14.8001 iterations 14
Cbc0038I Pass 130: suminf.    1.75539 (10) obj. 14.8001 iterations 3
Cbc0038I Pass 131: suminf.    5.33983 (30) obj. 14.8001 iterations 55
Cbc0038I Pass 132: suminf.    6.97063 (33) obj. 14.8001 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 129 columns, reduced to 148 rows 129 columns - 54 fixed gives 87, 67 - ok now
Cbc0038I Full problem 148 rows 129 columns, reduced to 79 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of 17 - took 0.10 seconds
Cbc0012I Integer solution of 17 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 43 added rows had average density of 32.744186
Cbc0013I At root node, 43 cuts changed objective from 10 to 10 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2215 row cuts average 8.9 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2203 row cuts average 92.9 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 869 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1114 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 132 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.787 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 17 best solution, best possible 10 (2.36 seconds)
Cbc0038I Full problem 148 rows 129 columns, reduced to 83 rows 65 columns
Cbc0038I Full problem 148 rows 129 columns, reduced to 73 rows 60 columns
Cbc0038I Full problem 148 rows 129 columns, reduced to 42 rows 34 columns
Cbc0038I Full problem 148 rows 129 columns, reduced to 56 rows 48 columns
Cbc0038I Full problem 148 rows 129 columns, reduced to 17 rows 15 columns
Cbc0038I Full problem 148 rows 129 columns, reduced to 66 rows 54 columns
Cbc0010I After 1000 nodes, 6 on tree, 17 best solution, best possible 11 (9.39 seconds)
Cbc0038I Full problem 148 rows 129 columns, reduced to 55 rows 43 columns
Cbc0016I Integer solution of 12 found by strong branching after 34632 iterations and 1249 nodes (11.92 seconds)
Cbc0001I Search completed - best objective 12, took 258725 iterations and 91664 nodes (11.92 seconds)
Cbc0032I Strong branching done 10772 times (71771 iterations), fathomed 267 nodes and fixed 433 variables
Cbc0041I Maximum depth 16, 0 variables fixed on reduced cost (complete fathoming 179 times, 90415 nodes taking 224090 iterations)
Cuts at root node changed objective from 10 to 10
Probing was tried 100 times and created 2216 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
Gomory was tried 100 times and created 2203 cuts of which 0 were active after adding rounds of cuts (0.074 seconds)
Knapsack was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 100 times and created 869 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 100 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
TwoMirCuts was tried 100 times and created 1114 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
ZeroHalf was tried 100 times and created 132 cuts of which 0 were active after adding rounds of cuts (0.787 seconds)
ImplicationCuts was tried 47 times and created 1336 cuts of which 0 were active after adding rounds of cuts (0.105 seconds)

Result - Optimal solution found

Objective value:                12.00000000
Enumerated nodes:               91664
Total iterations:               258725
Time (CPU seconds):             9.36
Time (Wallclock seconds):       11.94

Option for printingOptions changed from normal to all
Total time (CPU seconds):       9.36   (Wallclock seconds):       11.94

