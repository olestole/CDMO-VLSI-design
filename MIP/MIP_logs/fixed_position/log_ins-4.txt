Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /usr/local/lib/python3.9/site-packages/pulp/apis/../solverdir/cbc/osx/64/cbc /var/folders/t4/vnxj6kkj2n97knry5lnrscx00000gn/T/d5c50f349f93478c9f1b9027b99445fa-pulp.mps sec 300 timeMode elapsed branch printingOptions all solution /var/folders/t4/vnxj6kkj2n97knry5lnrscx00000gn/T/d5c50f349f93478c9f1b9027b99445fa-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 124 COLUMNS
At line 681 RHS
At line 801 BOUNDS
At line 902 ENDATA
Problem MODEL has 119 rows, 99 columns and 357 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 300
Option for timeMode changed from cpu to elapsed
Continuous objective value is 10 - 0.00 seconds
Cgl0004I processed model has 108 rows, 95 columns (95 integer (80 of which binary)) and 334 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 95 objects (95 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 80 integers unsatisfied sum - 18.1818
Cbc0038I Pass   1: suminf.   12.36364 (52) obj. 11 iterations 18
Cbc0038I Pass   2: suminf.    9.72727 (44) obj. 11 iterations 16
Cbc0038I Pass   3: suminf.    9.45455 (43) obj. 11 iterations 2
Cbc0038I Pass   4: suminf.    4.51724 (24) obj. 17 iterations 27
Cbc0038I Pass   5: suminf.    1.18182 (6) obj. 25 iterations 23
Cbc0038I Solution found of 25
Cbc0038I Cleaned solution of 25
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 95 columns, reduced to 56 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 25 to 18 (0.02 seconds)
Cbc0038I Round again with cutoff of 16.3001
Cbc0038I Pass   6: suminf.   12.36364 (52) obj. 11 iterations 0
Cbc0038I Pass   7: suminf.    9.72727 (44) obj. 11 iterations 16
Cbc0038I Pass   8: suminf.    9.45455 (43) obj. 11 iterations 2
Cbc0038I Pass   9: suminf.    3.57510 (20) obj. 16.3001 iterations 43
Cbc0038I Pass  10: suminf.    2.58737 (12) obj. 16.3001 iterations 20
Cbc0038I Pass  11: suminf.    1.93524 (8) obj. 16.3001 iterations 3
Cbc0038I Solution found of 16.3001
Cbc0038I Branch and bound needed to clear up 5 general integers
Cbc0038I Full problem 109 rows 95 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 14
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 95 columns, reduced to 79 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 12.4001
Cbc0038I Pass  12: suminf.   12.36364 (52) obj. 11 iterations 0
Cbc0038I Pass  13: suminf.    9.72727 (44) obj. 11 iterations 16
Cbc0038I Pass  14: suminf.    9.45455 (43) obj. 11 iterations 2
Cbc0038I Pass  15: suminf.    5.14789 (25) obj. 12.4001 iterations 44
Cbc0038I Pass  16: suminf.    1.65227 (6) obj. 12.4001 iterations 25
Cbc0038I Pass  17: suminf.    1.61779 (7) obj. 12.4001 iterations 1
Cbc0038I Pass  18: suminf.    1.34506 (6) obj. 12.4001 iterations 9
Cbc0038I Pass  19: suminf.    2.11074 (7) obj. 12.4001 iterations 8
Cbc0038I Pass  20: suminf.    2.54585 (7) obj. 12.4001 iterations 6
Cbc0038I Pass  21: suminf.    2.05549 (6) obj. 12.4001 iterations 8
Cbc0038I Pass  22: suminf.    2.14577 (6) obj. 12.4001 iterations 7
Cbc0038I Pass  23: suminf.    4.73143 (17) obj. 12.4001 iterations 28
Cbc0038I Pass  24: suminf.    3.41481 (11) obj. 12.4001 iterations 14
Cbc0038I Pass  25: suminf.    3.14209 (10) obj. 12.4001 iterations 1
Cbc0038I Pass  26: suminf.    2.54585 (7) obj. 12.4001 iterations 14
Cbc0038I Pass  27: suminf.    1.65541 (5) obj. 12.4001 iterations 11
Cbc0038I Pass  28: suminf.    1.74569 (5) obj. 12.4001 iterations 8
Cbc0038I Pass  29: suminf.    7.34666 (29) obj. 12.4001 iterations 47
Cbc0038I Pass  30: suminf.    6.02501 (25) obj. 12.4001 iterations 9
Cbc0038I Pass  31: suminf.    2.68358 (14) obj. 12.4001 iterations 31
Cbc0038I Pass  32: suminf.    2.72510 (15) obj. 12.4001 iterations 14
Cbc0038I Pass  33: suminf.    4.22720 (13) obj. 12.4001 iterations 26
Cbc0038I Pass  34: suminf.    2.94443 (11) obj. 12.4001 iterations 20
Cbc0038I Pass  35: suminf.    2.94443 (11) obj. 12.4001 iterations 0
Cbc0038I Pass  36: suminf.    3.71066 (12) obj. 12.4001 iterations 14
Cbc0038I Pass  37: suminf.    4.14326 (14) obj. 12.4001 iterations 14
Cbc0038I Pass  38: suminf.    4.56584 (14) obj. 12.4001 iterations 18
Cbc0038I Pass  39: suminf.    6.99240 (29) obj. 12.4001 iterations 53
Cbc0038I Pass  40: suminf.    6.23065 (24) obj. 12.4001 iterations 11
Cbc0038I Pass  41: suminf.    3.64169 (12) obj. 12.4001 iterations 24
Cbc0038I Pass  42: suminf.    3.64169 (12) obj. 12.4001 iterations 4
Cbc0038I Pass  43: suminf.    3.76286 (11) obj. 12.4001 iterations 18
Cbc0038I Pass  44: suminf.    3.39922 (11) obj. 12.4001 iterations 6
Cbc0038I Pass  45: suminf.    2.18715 (8) obj. 12.4001 iterations 7
Cbc0038I Pass  46: suminf.    2.18715 (8) obj. 12.4001 iterations 4
Cbc0038I Pass  47: suminf.    2.87305 (8) obj. 12.4001 iterations 10
Cbc0038I Pass  48: suminf.    2.50941 (8) obj. 12.4001 iterations 6
Cbc0038I Pass  49: suminf.    4.60102 (16) obj. 12.4001 iterations 28
Cbc0038I Pass  50: suminf.    3.18715 (14) obj. 12.4001 iterations 10
Cbc0038I Pass  51: suminf.    3.27061 (11) obj. 12.4001 iterations 21
Cbc0038I Pass  52: suminf.    3.27061 (11) obj. 12.4001 iterations 8
Cbc0038I Pass  53: suminf.    2.72516 (9) obj. 12.4001 iterations 17
Cbc0038I Pass  54: suminf.    2.72516 (9) obj. 12.4001 iterations 5
Cbc0038I Pass  55: suminf.    2.32508 (8) obj. 12.4001 iterations 10
Cbc0038I Pass  56: suminf.    2.32508 (8) obj. 12.4001 iterations 7
Cbc0038I Pass  57: suminf.    3.45290 (17) obj. 12.4001 iterations 26
Cbc0038I Pass  58: suminf.    4.33214 (20) obj. 12.4001 iterations 6
Cbc0038I Pass  59: suminf.    4.46388 (16) obj. 12.4001 iterations 22
Cbc0038I Pass  60: suminf.    4.46388 (16) obj. 12.4001 iterations 7
Cbc0038I Pass  61: suminf.    3.39797 (11) obj. 12.4001 iterations 18
Cbc0038I Pass  62: suminf.    3.39797 (11) obj. 12.4001 iterations 8
Cbc0038I Pass  63: suminf.    3.12524 (10) obj. 12.4001 iterations 14
Cbc0038I Pass  64: suminf.    3.12524 (10) obj. 12.4001 iterations 4
Cbc0038I Pass  65: suminf.    3.12524 (10) obj. 12.4001 iterations 10
Cbc0038I Pass  66: suminf.    3.12524 (10) obj. 12.4001 iterations 6
Cbc0038I Pass  67: suminf.    4.71192 (20) obj. 12.4001 iterations 24
Cbc0038I Pass  68: suminf.    4.51826 (20) obj. 12.4001 iterations 5
Cbc0038I Pass  69: suminf.    3.88495 (16) obj. 12.4001 iterations 20
Cbc0038I Pass  70: suminf.    3.33950 (15) obj. 12.4001 iterations 5
Cbc0038I Pass  71: suminf.    3.80854 (14) obj. 12.4001 iterations 21
Cbc0038I Pass  72: suminf.    3.26309 (13) obj. 12.4001 iterations 5
Cbc0038I Pass  73: suminf.    3.49139 (10) obj. 12.4001 iterations 12
Cbc0038I Pass  74: suminf.    3.49139 (10) obj. 12.4001 iterations 5
Cbc0038I Pass  75: suminf.    2.94593 (8) obj. 12.4001 iterations 5
Cbc0038I Pass  76: suminf.    2.94593 (8) obj. 12.4001 iterations 4
Cbc0038I Pass  77: suminf.    4.79585 (16) obj. 12.4001 iterations 21
Cbc0038I Pass  78: suminf.    3.88676 (14) obj. 12.4001 iterations 2
Cbc0038I Pass  79: suminf.    3.64937 (12) obj. 12.4001 iterations 18
Cbc0038I Pass  80: suminf.    3.85635 (12) obj. 12.4001 iterations 6
Cbc0038I Pass  81: suminf.    0.54545 (2) obj. 12 iterations 10
Cbc0038I Pass  82: suminf.    0.54545 (2) obj. 12 iterations 7
Cbc0038I Pass  83: suminf.    6.33762 (23) obj. 12.4001 iterations 34
Cbc0038I Pass  84: suminf.    4.95596 (20) obj. 12.4001 iterations 15
Cbc0038I Pass  85: suminf.    4.14594 (16) obj. 12.4001 iterations 24
Cbc0038I Pass  86: suminf.    4.35291 (17) obj. 12.4001 iterations 5
Cbc0038I Pass  87: suminf.    3.70456 (14) obj. 12.4001 iterations 13
Cbc0038I Pass  88: suminf.    3.80745 (15) obj. 12.4001 iterations 8
Cbc0038I Pass  89: suminf.    4.14247 (19) obj. 12.4001 iterations 28
Cbc0038I Pass  90: suminf.    3.88550 (17) obj. 12.4001 iterations 4
Cbc0038I Pass  91: suminf.    4.91153 (16) obj. 12.4001 iterations 16
Cbc0038I Pass  92: suminf.    3.72516 (16) obj. 12.4001 iterations 9
Cbc0038I Pass  93: suminf.    3.55918 (13) obj. 12.4001 iterations 14
Cbc0038I Pass  94: suminf.    3.15910 (12) obj. 12.4001 iterations 7
Cbc0038I Pass  95: suminf.    6.39852 (26) obj. 12.4001 iterations 34
Cbc0038I Pass  96: suminf.    5.36709 (25) obj. 12.4001 iterations 12
Cbc0038I Pass  97: suminf.    1.67665 (7) obj. 12.4001 iterations 28
Cbc0038I Pass  98: suminf.    3.62877 (12) obj. 12.4001 iterations 7
Cbc0038I Pass  99: suminf.    3.89147 (11) obj. 12.4001 iterations 6
Cbc0038I Pass 100: suminf.    3.52532 (13) obj. 12.4001 iterations 6
Cbc0038I Pass 101: suminf.    3.11191 (11) obj. 12.4001 iterations 10
Cbc0038I Pass 102: suminf.    2.32508 (8) obj. 12.4001 iterations 10
Cbc0038I Pass 103: suminf.    2.46301 (8) obj. 12.4001 iterations 9
Cbc0038I Pass 104: suminf.    4.04037 (15) obj. 12.4001 iterations 24
Cbc0038I Pass 105: suminf.    2.54247 (12) obj. 12.4001 iterations 7
Cbc0038I Pass 106: suminf.    2.52743 (7) obj. 12.4001 iterations 19
Cbc0038I Pass 107: suminf.    1.45595 (6) obj. 12.4001 iterations 13
Cbc0038I Pass 108: suminf.    2.25471 (6) obj. 12.4001 iterations 10
Cbc0038I Pass 109: suminf.    4.04271 (17) obj. 12.4001 iterations 33
Cbc0038I Pass 110: suminf.    3.58817 (15) obj. 12.4001 iterations 2
Cbc0038I Pass 111: suminf.    5.92822 (26) obj. 12.4001 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 95 columns, reduced to 108 rows 95 columns - 45 fixed gives 37, 27 - ok now
Cbc0038I Full problem 108 rows 95 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of 14 - took 0.11 seconds
Cbc0012I Integer solution of 14 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0031I 32 added rows had average density of 8.125
Cbc0013I At root node, 32 cuts changed objective from 10 to 10 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2156 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1765 row cuts average 62.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 397 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 33 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 508 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 123 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.770 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 14 best solution, best possible 10 (2.15 seconds)
Cbc0038I Full problem 108 rows 95 columns, reduced to 59 rows 48 columns
Cbc0038I Full problem 108 rows 95 columns, reduced to 68 rows 57 columns
Cbc0016I Integer solution of 11 found by strong branching after 16680 iterations and 327 nodes (3.70 seconds)
Cbc0001I Search completed - best objective 11, took 16680 iterations and 327 nodes (3.70 seconds)
Cbc0032I Strong branching done 4500 times (32227 iterations), fathomed 86 nodes and fixed 123 variables
Cbc0035I Maximum depth 15, 0 variables fixed on reduced cost
Cuts at root node changed objective from 10 to 10
Probing was tried 100 times and created 2156 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
Gomory was tried 100 times and created 1765 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
Knapsack was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 100 times and created 397 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 100 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 100 times and created 508 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
ZeroHalf was tried 100 times and created 123 cuts of which 0 were active after adding rounds of cuts (0.770 seconds)
ImplicationCuts was tried 31 times and created 920 cuts of which 0 were active after adding rounds of cuts (0.071 seconds)

Result - Optimal solution found

Objective value:                11.00000000
Enumerated nodes:               327
Total iterations:               16680
Time (CPU seconds):             2.47
Time (Wallclock seconds):       3.71

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.47   (Wallclock seconds):       3.71

